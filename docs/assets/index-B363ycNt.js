import{c as e,r as t,w as n,j as s,n as o,s as r,l as a,v as i,H as l,f as d}from"./index-CM0htoqd.js";import{U as c,ao as p,ap as u,aq as m,ar as x,as as f,at as h,au as y,av as g,aw as b,ax as v,ay as w,az as k,aA as j,aB as N,aC as C,aD as _,C as E,aE as P,aF as S,d as T,B as A,al as I,aG as D,c as R,aH as M}from"./MacroContext-EXPiZfro.js";import{B as z}from"./badge-BiYM5699.js";import{P as F}from"./play-YEQGcZMG.js";import{T as L,P as O,D as U}from"./trash-2-BwW4XIOL.js";import{M as H}from"./index-ovc9Clef.js";import{r as K}from"./index-C7nFHKxE.js";import{S as $}from"./square-uagP8gW8.js";import{R as B,B as V}from"./rotate-ccw-DeZ52D9G.js";import{S as W}from"./save-Emzgx_nG.js";import{F as G}from"./file-text-DxPvXGCk.js";import"./monaco-editor-Ch9pnC_y.js";
/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const J=e("EllipsisVertical",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"12",cy:"5",r:"1",key:"gxeob9"}],["circle",{cx:"12",cy:"19",r:"1",key:"lyex9k"}]]),q=e("Type",[["polyline",{points:"4 7 4 4 20 4 20 7",key:"1nosan"}],["line",{x1:"9",x2:"15",y1:"20",y2:"20",key:"swin9y"}],["line",{x1:"12",x2:"12",y1:"4",y2:"20",key:"1tx1rr"}]]);
/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var X="DropdownMenu",[Y,Q]=o(X,[p]),Z=p(),[ee,te]=Y(X),ne=e=>{const{__scopeDropdownMenu:o,children:a,dir:i,open:l,defaultOpen:d,onOpenChange:c,modal:p=!0}=e,m=Z(o),x=t.useRef(null),[f,h]=n({prop:l,defaultProp:d??!1,onChange:c,caller:X});return s.jsx(ee,{scope:o,triggerId:r(),triggerRef:x,contentId:r(),open:f,onOpenChange:h,onOpenToggle:t.useCallback((()=>h((e=>!e))),[h]),modal:p,children:s.jsx(u,{...m,open:f,onOpenChange:h,dir:i,modal:p,children:a})})};ne.displayName=X;var se="DropdownMenuTrigger",oe=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,disabled:o=!1,...r}=e,d=te(se,n),c=Z(n);return s.jsx(m,{asChild:!0,...c,children:s.jsx(a.button,{type:"button",id:d.triggerId,"aria-haspopup":"menu","aria-expanded":d.open,"aria-controls":d.open?d.contentId:void 0,"data-state":d.open?"open":"closed","data-disabled":o?"":void 0,disabled:o,...r,ref:l(t,d.triggerRef),onPointerDown:i(e.onPointerDown,(e=>{o||0!==e.button||!1!==e.ctrlKey||(d.onOpenToggle(),d.open||e.preventDefault())})),onKeyDown:i(e.onKeyDown,(e=>{o||(["Enter"," "].includes(e.key)&&d.onOpenToggle(),"ArrowDown"===e.key&&d.onOpenChange(!0),["Enter"," ","ArrowDown"].includes(e.key)&&e.preventDefault())}))})})}));oe.displayName=se;var re=e=>{const{__scopeDropdownMenu:t,...n}=e,o=Z(t);return s.jsx(x,{...o,...n})};re.displayName="DropdownMenuPortal";var ae="DropdownMenuContent",ie=t.forwardRef(((e,n)=>{const{__scopeDropdownMenu:o,...r}=e,a=te(ae,o),l=Z(o),d=t.useRef(!1);return s.jsx(f,{id:a.contentId,"aria-labelledby":a.triggerId,...l,...r,ref:n,onCloseAutoFocus:i(e.onCloseAutoFocus,(e=>{var t;d.current||null==(t=a.triggerRef.current)||t.focus(),d.current=!1,e.preventDefault()})),onInteractOutside:i(e.onInteractOutside,(e=>{const t=e.detail.originalEvent,n=0===t.button&&!0===t.ctrlKey,s=2===t.button||n;a.modal&&!s||(d.current=!0)})),style:{...e.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})}));ie.displayName=ae;t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(y,{...r,...o,ref:t})})).displayName="DropdownMenuGroup";var le=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(g,{...r,...o,ref:t})}));le.displayName="DropdownMenuLabel";var de=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(h,{...r,...o,ref:t})}));de.displayName="DropdownMenuItem";var ce=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(b,{...r,...o,ref:t})}));ce.displayName="DropdownMenuCheckboxItem";t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(v,{...r,...o,ref:t})})).displayName="DropdownMenuRadioGroup";var pe=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(w,{...r,...o,ref:t})}));pe.displayName="DropdownMenuRadioItem";var ue=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(k,{...r,...o,ref:t})}));ue.displayName="DropdownMenuItemIndicator";var me=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(j,{...r,...o,ref:t})}));me.displayName="DropdownMenuSeparator";t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(N,{...r,...o,ref:t})})).displayName="DropdownMenuArrow";var xe=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(C,{...r,...o,ref:t})}));xe.displayName="DropdownMenuSubTrigger";var fe=t.forwardRef(((e,t)=>{const{__scopeDropdownMenu:n,...o}=e,r=Z(n);return s.jsx(_,{...r,...o,ref:t,style:{...e.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})}));fe.displayName="DropdownMenuSubContent";var he=re,ye=ie,ge=le,be=de,ve=ce,we=pe,ke=ue,je=me,Ne=xe,Ce=fe;const _e=ne,Ee=oe;t.forwardRef((({className:e,inset:t,children:n,...o},r)=>s.jsxs(Ne,{ref:r,className:d("flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",t&&"pl-8",e),...o,children:[n,s.jsx(E,{className:"ml-auto h-4 w-4"})]}))).displayName=Ne.displayName;t.forwardRef((({className:e,...t},n)=>s.jsx(Ce,{ref:n,className:d("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",e),...t}))).displayName=Ce.displayName;const Pe=t.forwardRef((({className:e,sideOffset:t=4,...n},o)=>s.jsx(he,{children:s.jsx(ye,{ref:o,sideOffset:t,className:d("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",e),...n})})));Pe.displayName=ye.displayName;const Se=t.forwardRef((({className:e,inset:t,...n},o)=>s.jsx(be,{ref:o,className:d("relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",t&&"pl-8",e),...n})));Se.displayName=be.displayName;t.forwardRef((({className:e,children:t,checked:n,...o},r)=>s.jsxs(ve,{ref:r,className:d("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",e),checked:n,...o,children:[s.jsx("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:s.jsx(ke,{children:s.jsx(P,{className:"h-4 w-4"})})}),t]}))).displayName=ve.displayName;t.forwardRef((({className:e,children:t,...n},o)=>s.jsxs(we,{ref:o,className:d("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",e),...n,children:[s.jsx("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:s.jsx(ke,{children:s.jsx(S,{className:"h-2 w-2 fill-current"})})}),t]}))).displayName=we.displayName;t.forwardRef((({className:e,inset:t,...n},o)=>s.jsx(ge,{ref:o,className:d("px-2 py-1.5 text-sm font-semibold",t&&"pl-8",e),...n}))).displayName=ge.displayName;t.forwardRef((({className:e,...t},n)=>s.jsx(je,{ref:n,className:d("-mx-1 my-1 h-px bg-muted",e),...t}))).displayName=je.displayName;const Te=({cell:e,onUpdate:n,onExecute:o,onDelete:r,onTypeChange:a,isSelected:i,onSelect:l})=>{const[d,c]=t.useState(!1),p=t.useRef(null);t.useEffect((()=>{d&&p.current&&(p.current.focus(),p.current.setSelectionRange(p.current.value.length,p.current.value.length))}),[d]);const u=t=>{"Enter"===t.key&&(t.metaKey||t.ctrlKey)&&(t.preventDefault(),o(e.id),c(!1)),"Escape"===t.key&&c(!1)};return s.jsx(T,{className:"notebook-cell group relative mb-2 transition-all duration-200 "+(i?"ring-2 ring-blue-500":"hover:shadow-md"),onClick:()=>l(e.id),children:s.jsxs("div",{className:"flex",children:[s.jsx("div",{className:"notebook-cell-indicator flex flex-col items-center justify-start pt-4 pl-4 pr-2 min-w-[60px]",children:"code"===e.type?s.jsxs("div",{className:"flex flex-col items-center space-y-2",children:[s.jsxs(z,{variant:"outline",className:"text-xs",children:["[",e.executionCount||" ","]"]}),s.jsx(A,{size:"sm",variant:"ghost",onClick:t=>{t.stopPropagation(),o(e.id)},disabled:e.isExecuting,className:"w-8 h-8 p-0 opacity-0 group-hover:opacity-100 transition-opacity",children:s.jsx(F,{className:"w-4 h-4"})})]}):s.jsx(z,{variant:"secondary",className:"text-xs",children:"MD"})}),s.jsxs("div",{className:"notebook-cell-content flex-1 p-4 pl-2",children:[s.jsx("div",{className:"min-h-[80px] cursor-text",onClick:e=>{e.stopPropagation(),c(!0)},children:d?s.jsx("textarea",{ref:p,value:e.content,onChange:t=>{n(e.id,t.target.value),(e=>{const t=e.value.split("\n").length,n=Math.max(3,Math.min(20,t));e.style.height="auto",e.style.height=Math.max(80,20*n)+"px"})(t.target)},onKeyDown:u,onBlur:()=>c(!1),className:"w-full resize-none border-none outline-none bg-transparent font-mono text-sm leading-relaxed",style:{minHeight:"80px",height:"auto"},placeholder:"code"===e.type?"Enter Python code...":"Enter markdown...",rows:Math.max(3,e.content.split("\n").length)}):"code"===e.type?s.jsx("div",{className:"w-full min-h-[80px]",children:s.jsx("pre",{className:"font-mono text-sm whitespace-pre-wrap overflow-x-auto p-2 bg-gray-50 dark:bg-gray-900 rounded border",children:s.jsx("code",{className:"text-blue-600 dark:text-blue-400",children:e.content||"Click to edit..."})})}):s.jsx("div",{className:"prose prose-sm max-w-none",children:e.content?s.jsx(H,{remarkPlugins:[K],children:e.content}):s.jsx("span",{className:"text-muted-foreground italic",children:"Click to edit..."})})}),e.output&&"code"===e.type&&s.jsx("div",{className:"notebook-cell-output mt-4 p-3 rounded-md border-l-4 "+(e.hasError?"bg-red-50 dark:bg-red-900/20 border-red-500":"bg-gray-50 dark:bg-gray-900 border-green-500"),children:s.jsx("pre",{className:"text-sm whitespace-pre-wrap overflow-x-auto "+(e.hasError?"text-red-700 dark:text-red-300":""),children:e.output})}),e.isExecuting&&s.jsxs("div",{className:"notebook-cell-loading mt-2 flex items-center space-x-2 text-sm text-muted-foreground",children:[s.jsx("div",{className:"w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin"}),s.jsx("span",{children:"Executing..."})]})]}),s.jsx("div",{className:"notebook-cell-actions flex items-start justify-end pt-4 pr-4",children:s.jsxs(_e,{children:[s.jsx(Ee,{asChild:!0,children:s.jsx(A,{size:"sm",variant:"ghost",className:"w-8 h-8 p-0 opacity-0 group-hover:opacity-100 transition-opacity",children:s.jsx(J,{className:"w-4 h-4"})})}),s.jsxs(Pe,{align:"end",className:"bg-white dark:bg-gray-800 border shadow-lg",children:[s.jsx(Se,{onClick:()=>a(e.id,"code"===e.type?"markdown":"code"),children:"code"===e.type?s.jsxs(s.Fragment,{children:[s.jsx(q,{className:"w-4 h-4 mr-2"}),"To Markdown"]}):s.jsxs(s.Fragment,{children:[s.jsx(I,{className:"w-4 h-4 mr-2"}),"To Code"]})}),s.jsxs(Se,{onClick:()=>r(e.id),className:"text-red-600 focus:text-red-600",children:[s.jsx(L,{className:"w-4 h-4 mr-2"}),"Delete Cell"]})]})]})})]})})},Ae=({onAddCell:e,onSave:t,onRunAll:n,onStopAll:o,onRestart:r,onExport:a,kernelStatus:i,isExecuting:l})=>s.jsx("div",{className:"notebook-toolbar border-b bg-white dark:bg-gray-900 px-4 py-3 sticky top-0 z-10",children:s.jsxs("div",{className:"flex items-center justify-between",children:[s.jsxs("div",{className:"notebook-toolbar-title flex items-center space-x-2",children:[s.jsx("h1",{className:"text-xl font-semibold",children:"Notebook"}),s.jsxs("div",{className:"flex items-center space-x-1",children:[s.jsx("div",{className:`w-2 h-2 rounded-full ${(()=>{switch(i){case"idle":return"bg-green-500";case"busy":return"bg-yellow-500";case"disconnected":return"bg-red-500";default:return"bg-gray-500"}})()}`}),s.jsx(z,{variant:"outline",className:"text-xs",children:"Python 3"})]})]}),s.jsxs("div",{className:"notebook-toolbar-actions flex items-center space-x-2",children:[s.jsxs(_e,{children:[s.jsx(Ee,{asChild:!0,children:s.jsxs(A,{size:"sm",variant:"outline",children:[s.jsx(O,{className:"w-4 h-4 mr-1"}),"Cell"]})}),s.jsxs(Pe,{className:"bg-white dark:bg-gray-800 border shadow-lg",children:[s.jsx(Se,{onClick:()=>e("code"),children:"Code Cell"}),s.jsx(Se,{onClick:()=>e("markdown"),children:"Markdown Cell"})]})]}),s.jsx(D,{orientation:"vertical",className:"h-6"}),s.jsxs(A,{size:"sm",variant:"outline",onClick:n,disabled:l,children:[s.jsx(F,{className:"w-4 h-4 mr-1"}),"Run All"]}),s.jsxs(A,{size:"sm",variant:"outline",onClick:o,disabled:!l,children:[s.jsx($,{className:"w-4 h-4 mr-1"}),"Stop"]}),s.jsxs(A,{size:"sm",variant:"outline",onClick:r,children:[s.jsx(B,{className:"w-4 h-4 mr-1"}),"Restart"]}),s.jsx(D,{orientation:"vertical",className:"h-6"}),s.jsxs(A,{size:"sm",variant:"outline",onClick:t,children:[s.jsx(W,{className:"w-4 h-4 mr-1"}),"Save"]}),s.jsxs(A,{size:"sm",variant:"outline",onClick:a,children:[s.jsx(U,{className:"w-4 h-4 mr-1"}),"Export"]})]})]})}),Ie=({className:e="",initialCells:n})=>{const{cells:o,selectedCellId:r,kernelStatus:a,isExecuting:i,addCell:l,updateCell:d,deleteCell:p,changeCellType:u,executeCell:m,runAllCells:x,stopAllExecution:f,restartKernel:h,saveNotebook:y,exportNotebook:g,selectCell:b}=(e=>{const n=()=>Date.now().toString()+Math.random().toString(36).substr(2,9),s=()=>e&&e.length>0?e.map((e=>({id:e.id||n(),type:e.type,content:e.content,output:"",executionCount:0}))):[{id:n(),type:"code",content:'# Welcome to your Python notebook!\nprint("Hello, World!")',output:"",executionCount:0}],[o,r]=t.useState(s()),[a,i]=t.useState((()=>{const e=s();return e.length>0?e[0].id:""})),[l,d]=t.useState("idle"),[p,u]=t.useState(1),[m,x]=t.useState(!1);t.useEffect((()=>{(async()=>{try{const e=await c.isPyodideReady();x(e),d(e?"idle":"disconnected")}catch(e){d("disconnected")}})()}),[]),t.useEffect((()=>{if(e&&e.length>0){const t=e.map((e=>({id:e.id||n(),type:e.type,content:e.content,output:"",executionCount:0})));r(t),t.length>0&&i(t[t.length-1].id)}}),[e]);const f=t.useCallback(((e,t)=>{const s={id:n(),type:e,content:"",output:"",executionCount:0};r((e=>{if(t){const n=e.findIndex((e=>e.id===t)),o=[...e];return o.splice(n+1,0,s),o}return[...e,s]})),i(s.id)}),[]),h=t.useCallback(((e,t)=>{r((n=>n.map((n=>n.id===e?{...n,content:t}:n))))}),[]),y=t.useCallback((e=>{r((t=>{const s=t.filter((t=>t.id!==e));return 0===s.length?[{id:n(),type:"code",content:"",output:"",executionCount:0}]:s})),a===e&&r((t=>{const n=t.filter((t=>t.id!==e));return n.length>0&&i(n[0].id),n}))}),[a]),g=t.useCallback(((e,t)=>{r((n=>n.map((n=>n.id===e?{...n,type:t,output:""}:n))))}),[]),b=t.useCallback((async e=>{const t=o.find((t=>t.id===e));if(t){if("markdown"===t.type)return r((n=>n.map((n=>n.id===e?{...n,output:t.content,executionCount:p}:n)))),void u((e=>e+1));if(t.content.trim()){r((t=>t.map((t=>t.id===e?{...t,isExecuting:!0,output:""}:t)))),d("busy");try{if(!m){const e=await c.initPyodide();if("success"!==e.status)throw new Error(`Pyodide initialization failed: ${e.message}`);x(!0),d("idle")}const n=await c.executePython(t.content,!0);let s="";n.success?(n.stdout&&(s+=n.stdout),void 0!==n.result&&null!==n.result&&(s&&(s+="\n"),s+=String(n.result)),s||(s="(execution completed successfully)")):s=`Error: ${n.error||"Unknown error occurred"}`,r((t=>t.map((t=>t.id===e?{...t,isExecuting:!1,output:s,executionCount:p,hasError:!n.success}:t)))),u((e=>e+1))}catch(n){const t=n instanceof Error?n.message:"Unknown error occurred";r((n=>n.map((n=>n.id===e?{...n,isExecuting:!1,output:`Error: ${t}`,hasError:!0}:n))))}finally{d("idle")}}}}),[o,p,m]),v=t.useCallback((async()=>{const e=o.filter((e=>e.content.trim()));for(const t of e)await b(t.id)}),[o,b]),w=t.useCallback((()=>{r((e=>e.map((e=>({...e,isExecuting:!1}))))),d("idle")}),[]),k=t.useCallback((async()=>{try{d("restarting");const e=await c.initPyodide();if("success"!==e.status)throw d("disconnected"),new Error(`Kernel restart failed: ${e.message}`);x(!0),d("idle"),r((e=>e.map((e=>({...e,isExecuting:!1,output:"",executionCount:0,hasError:!1}))))),u(1)}catch(e){d("disconnected")}}),[]),j=t.useCallback((()=>{const e={cells:o.map((({isExecuting:e,hasError:t,...n})=>({...n,cell_type:"code"===n.type?"code":"markdown",source:n.content.split("\n"),outputs:"code"===n.type&&n.output?[{output_type:t?"error":"execute_result",data:t?void 0:{"text/plain":n.output},traceback:t?[n.output]:void 0,execution_count:n.executionCount}]:[],execution_count:"code"===n.type?n.executionCount:null}))),metadata:{kernelspec:{display_name:"Python 3 (Pyodide)",language:"python",name:"python3"},language_info:{name:"python",version:"3.11.0"}},nbformat:4,nbformat_minor:4},t=JSON.stringify(e,null,2),n=new Blob([t],{type:"application/json"}),s=URL.createObjectURL(n),r=document.createElement("a");r.href=s,r.download="python-notebook.ipynb",r.click(),URL.revokeObjectURL(s)}),[o]),N=t.useCallback((()=>{j()}),[j]),C=o.some((e=>e.isExecuting));return{cells:o,selectedCellId:a,kernelStatus:l,isExecuting:C,isInitialized:m,addCell:f,updateCell:h,deleteCell:y,changeCellType:g,executeCell:b,runAllCells:v,stopAllExecution:w,restartKernel:k,saveNotebook:j,exportNotebook:N,selectCell:i}})(n);return s.jsxs("div",{className:`notebook-container h-full flex flex-col bg-gray-50 dark:bg-gray-950 ${e}`,children:[s.jsx(Ae,{onAddCell:l,onSave:y,onRunAll:x,onStopAll:f,onRestart:h,onExport:g,kernelStatus:a,isExecuting:i}),s.jsxs("div",{className:"notebook-content flex-1 overflow-y-auto max-w-6xl mx-auto p-4 md:p-6 lg:p-8 w-full",children:[s.jsx("div",{className:"notebook-cells space-y-1",children:o.map((e=>s.jsx(Te,{cell:e,onUpdate:d,onExecute:m,onDelete:p,onTypeChange:u,isSelected:r===e.id,onSelect:b},e.id)))}),s.jsx("div",{className:"notebook-add-cell mt-6 flex justify-center",children:s.jsx("button",{onClick:()=>l("code"),className:"flex items-center space-x-2 px-4 py-2 text-sm text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100 border border-dashed border-gray-300 dark:border-gray-700 rounded-lg hover:border-gray-400 dark:hover:border-gray-600 transition-colors",children:s.jsx("span",{children:"+ Add cell"})})})]})]})},De=[{id:"basic",name:"Basic Tests",icon:F,expanded:!0,cases:[{id:"hello-world",name:"Hello World",description:"Simple arithmetic and output",type:"code",code:'print("Hello from Python!")\n2 + 2'},{id:"json-processing",name:"JSON Processing",description:"Test JSON manipulation",type:"code",code:'import json\ndata = {"message": "Hello from Python", "numbers": [1, 2, 3]}\njson.dumps(data, indent=2)'},{id:"loops-variables",name:"Loops & Variables",description:"Test control flow",type:"code",code:'for i in range(5):\n    print(f"Count: {i}")\n\nresult = sum(range(10))\nprint(f"Sum of 0-9: {result}")\nresult'}]},{id:"api-tests",name:"Desktop API Tests",icon:I,expanded:!0,cases:[{id:"api-verification",name:"API Verification",description:"Check if desktop API is available",type:"code",code:'# Simple Desktop API Verification Test\nprint("=== Desktop API Verification ===")\n\n# Check if desktop object exists\ntry:\n    print(f"Desktop object type: {type(desktop)}")\n    print(f"Desktop API type: {type(desktop.api)}")\n    print(f"Desktop Events type: {type(desktop.events)}")\n    print("✓ Desktop object is available")\nexcept NameError as e:\n    print(f"✗ Desktop object not found: {e}")\n    print("This indicates the Desktop API bridge setup failed")\n\n# Check available methods\ntry:\n    print(f"Desktop API methods: {dir(desktop.api)}")\n    print(f"Desktop Events methods: {dir(desktop.events)}")\nexcept:\n    print("Could not inspect desktop object methods")\n\nprint("=== Verification Complete ===")\n"Desktop API verification completed"'},{id:"api-component-listing",name:"Component Listing Test",description:"Test listing available desktop components",type:"code",code:'# Test 1: List Available Components\nprint("=== Component Listing Test ===")\nprint()\n\ntry:\n    components = await desktop.api.list_components()\n    comp_count = len(components) if hasattr(components, \'__len__\') else "unknown"\n    print(f"✓ Found {comp_count} components")\n    print(f"Components: {components}")\n    print("✓ Component listing test passed")\nexcept Exception as e:\n    print(f"✗ Component listing failed: {e}")\n\nprint("=== Test Complete ===")\n"Component listing test completed"'},{id:"api-event-emission",name:"Event Emission Test",description:"Test desktop event emission functionality",type:"code",code:'# Test 2: Event Emission\nprint("=== Event Emission Test ===")\nprint()\n\ntry:\n    events_result = await desktop.events.emit("python_test_event", {\n        "message": "Hello from Python!",\n        "timestamp": "2025-05-27", \n        "test": True,\n        "source": "event_emission_test"\n    })\n    print(f"✓ Event emission successful")\n    print(f"Result: {events_result}")\n    print("✓ Event emission test passed")\nexcept Exception as e:\n    print(f"✗ Event emission failed: {e}")\n\nprint("=== Test Complete ===")\n"Event emission test completed"'},{id:"api-calculator-test",name:"Calculator API Test",description:"Test calculator component execution",type:"code",code:'# Test 3: Calculator API Execution\nprint("=== Calculator API Test ===")\nprint()\n\ndef check_calculator_response(result, operation, a, b):\n    """Helper function to validate calculator API responses"""\n    if isinstance(result, dict):\n        # Check for success: false (lowercase)\n        if result.get("success") is False:\n            error_msg = result.get("error", "Unknown error")\n            raise Exception(f"Calculator API returned failure: {error_msg}")\n        # Check for Success: False (uppercase - legacy)\n        elif result.get("Success") is False:\n            error_msg = result.get("Error", "Unknown error")\n            raise Exception(f"Calculator API returned failure: {error_msg}")\n        # Extract the actual result value\n        elif "data" in result:\n            return result["data"]\n        elif "Result" in result:\n            return result["Result"]\n        elif "result" in result:\n            return result["result"]\n        else:\n            # If it\'s a dict but no clear result field, return the whole dict\n            return result\n    else:\n        # If it\'s not a dict, assume it\'s the direct result\n        return result\n\ntry:\n    # Test addition\n    print("Testing addition: 15 + 27...")\n    add_result = await desktop.api.execute("calculator", "add", {"a": 15, "b": 27})\n    print(f"Raw response: {add_result}")\n    \n    validated_add = check_calculator_response(add_result, "add", 15, 27)\n    print(f"✓ Addition: 15 + 27 = {validated_add}")\n    \n    # Verify the result is correct\n    if validated_add == 42:\n        print("✓ Addition result is mathematically correct")\n    else:\n        print(f"⚠️  Addition result unexpected: got {validated_add}, expected 42")\n    \n    print()\n    print("✓ Calculator API test passed - app is running and responsive")\n    print("ℹ️  Note: Only addition is currently implemented in the calculator")\n    \nexcept Exception as e:\n    print(f"✗ Calculator API test failed: {e}")\n    print()\n    print("Possible causes:")\n    print("1. Calculator app is not currently running")\n    print("2. Calculator plugin is not available")\n    print("3. API communication error")\n    print("4. Invalid operation or parameters")\n    print()\n    print("To fix: Try opening the Calculator app first, then run this test again")\n\nprint("=== Test Complete ===")\n"Calculator API test completed"'},{id:"api-notification-test",name:"Notification System Test",description:"Test system notification functionality",type:"code",code:'# Test 4: System Notification\nprint("=== Notification System Test ===")\nprint()\n\ntry:\n    system_result = await desktop.api.execute("launcher", "notify", {\n        "message": "Python API test notification from notification test",\n        "type": "sonner"\n    })\n    print(f"✓ Notification sent successfully")\n    print(f"Result: {system_result}")\n    print("✓ Check your screen for the notification!")\n    print("✓ Notification system test passed")\nexcept Exception as e:\n    print(f"✗ Notification system test failed: {e}")\n\nprint("=== Test Complete ===")\n"Notification system test completed"'},{id:"api-error-handling",name:"Error Handling Test",description:"Test API error handling and recovery",type:"code",code:'# Test 5: Error Handling\nprint("=== Error Handling Test ===")\nprint()\n\n# Test with non-existent component\ntry:\n    error_result = await desktop.api.execute("nonexistent_component", "fakeAction", {})\n    print(f"Unexpected success: {error_result}")\n    print("✗ Error handling test failed - should have thrown an error")\nexcept Exception as e:\n    print(f"✓ Correctly caught expected error: {e}")\n    print("✓ Error handling working as expected")\n\n# Test with invalid action\ntry:\n    error_result = await desktop.api.execute("calculator", "invalid_operation", {"a": 1, "b": 2})\n    print(f"Unexpected success: {error_result}")\n    print("✗ Error handling test failed - should have thrown an error")\nexcept Exception as e:\n    print(f"✓ Correctly caught invalid action error: {e}")\n    print("✓ Error handling working as expected")\n\nprint("=== Test Complete ===")\n"Error handling test completed"'},{id:"api-comprehensive-suite",name:"Run All API Tests",description:"Execute all API tests in sequence",type:"code",code:'# Comprehensive API Bridge Test Suite\nprint("=== Running All Desktop API Tests ===")\nprint()\n\ntest_results = []\n\n# Test 1: Component Listing\nprint("1. Testing component listing...")\ntry:\n    components = await desktop.api.list_components()\n    comp_count = len(components) if hasattr(components, \'__len__\') else "unknown"\n    print(f"   ✓ Found {comp_count} components")\n    test_results.append("Component Listing: PASS")\nexcept Exception as e:\n    print(f"   ✗ Failed: {e}")\n    test_results.append("Component Listing: FAIL")\nprint()\n\n# Test 2: Event Emission\nprint("2. Testing event emission...")\ntry:\n    events_result = await desktop.events.emit("python_comprehensive_test", {\n        "message": "Comprehensive test event",\n        "timestamp": "2025-05-27",\n        "test_suite": "comprehensive"\n    })\n    print(f"   ✓ Event emission successful")\n    test_results.append("Event Emission: PASS")\nexcept Exception as e:\n    print(f"   ✗ Failed: {e}")\n    test_results.append("Event Emission: FAIL")\nprint()\n\n# Test 3: Calculator API\nprint("3. Testing calculator API...")\ntry:\n    calc_result = await desktop.api.execute("calculator", "add", {"a": 25, "b": 17})\n    print(f"   Raw response: {calc_result}")\n    \n    # Check for Success: False response\n    if isinstance(calc_result, dict) and calc_result.get("Success") is False:\n        error_msg = calc_result.get("Error", "Unknown error")\n        raise Exception(f"Calculator not available: {error_msg}")\n    \n    # Extract the actual result\n    if isinstance(calc_result, dict):\n        actual_result = calc_result.get("Result") or calc_result.get("result") or calc_result\n    else:\n        actual_result = calc_result\n    \n    print(f"   ✓ Calculator: 25 + 17 = {actual_result}")\n    if actual_result == 42:\n        print(f"   ✓ Result is mathematically correct")\n    test_results.append("Calculator API: PASS")\nexcept Exception as e:\n    print(f"   ✗ Failed: {e}")\n    print(f"   (Calculator app may not be running)")\n    test_results.append("Calculator API: FAIL")\nprint()\n\n# Test 4: Notification System\nprint("4. Testing notification system...")\ntry:\n    notif_result = await desktop.api.execute("launcher", "notify", {\n        "message": "Comprehensive API test completed!",\n        "type": "sonner"\n    })\n    print(f"   ✓ Notification sent successfully")\n    test_results.append("Notification System: PASS")\nexcept Exception as e:\n    print(f"   ✗ Failed: {e}")\n    test_results.append("Notification System: FAIL")\nprint()\n\n# Test 5: Error Handling\nprint("5. Testing error handling...")\ntry:\n    await desktop.api.execute("nonexistent", "fakeAction", {})\n    print(f"   ✗ Error handling failed - should have thrown error")\n    test_results.append("Error Handling: FAIL")\nexcept Exception as e:\n    print(f"   ✓ Correctly caught error: {type(e).__name__}")\n    test_results.append("Error Handling: PASS")\nprint()\n\n# Summary\nprint("=== Test Suite Summary ===")\nfor result in test_results:\n    print(f"  {result}")\n\npassed = len([r for r in test_results if "PASS" in r])\ntotal = len(test_results)\nprint(f"\\nOverall: {passed}/{total} tests passed")\n\nif passed == total:\n    print("🎉 All tests passed! Desktop API is working correctly.")\nelse:\n    print(f"⚠️  {total - passed} test(s) failed. Check individual results above.")\n\n"Comprehensive API test suite completed"'},{id:"event-subscription",name:"Event Subscription",description:"Test Python event handling",type:"code",code:'# Test Event Subscription\nprint("Testing event subscription...")\n\n# Define event handler\ndef handle_test_event(data):\n    print(f"Received event: {data}")\n\n# Subscribe to events\nunsubscribe = desktop.events.subscribe("python_test_event", handle_test_event)\nprint("Subscribed to python_test_event")\n\n# Emit a test event\ndesktop.events.emit("python_test_event", {"timestamp": "2025-05-27", "source": "Python"})\n\nprint("Event subscription test completed")'}]},{id:"documentation",name:"Documentation",icon:V,expanded:!1,cases:[{id:"getting-started",name:"Getting Started",description:"Introduction to the Python Notebook",type:"markdown",code:"# Python Notebook with Pyodide\n\nWelcome to the Python Notebook! This is a Jupyter-style interface for running Python code directly in your browser using Pyodide.\n\n## Features\n\n- **Interactive Python Execution**: Run Python code directly in your browser\n- **Desktop API Integration**: Access desktop functionality from Python\n- **Event System**: Subscribe to and emit events between Python and the desktop\n- **Multiple Cell Types**: Support for both code and markdown cells\n\n## Getting Started\n\n1. First, initialize Pyodide by running the initialization code\n2. Try the basic examples in the sidebar\n3. Explore the Desktop API integration features\n4. Create your own experiments!\n\n## Desktop API\n\nThe desktop API is available through the `desktop` object in Python:\n\n- `desktop.api` - Access to desktop functionality\n- `desktop.events` - Event subscription and emission\n\nTry the API tests in the sidebar to see what's available!"}]}],Re=({category:e,testCase:t,level:n,selectedTestId:o,onCategoryToggle:r,onTestSelect:a})=>{const i=()=>{e&&r?r(e.id):t&&a&&a(t)};if(e){const t=e.icon;return s.jsxs("div",{children:[s.jsxs("div",{className:"flex items-center py-1 px-2 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 rounded",onClick:i,style:{paddingLeft:12*n+8+"px"},children:[s.jsx("span",{className:"mr-1",children:e.expanded?s.jsx(R,{size:16}):s.jsx(E,{size:16})}),s.jsx(t,{size:16,className:"mr-2 text-blue-500"}),s.jsx("span",{className:"text-sm font-medium",children:e.name})]}),e.expanded&&s.jsx("div",{children:e.cases.map((e=>s.jsx(Re,{testCase:e,level:n+1,selectedTestId:o,onTestSelect:a},e.id)))})]})}if(t){const e=o===t.id;return s.jsxs("div",{className:"flex items-center py-1 px-2 cursor-pointer rounded transition-colors "+(e?"bg-blue-100 dark:bg-blue-900/50 text-blue-900 dark:text-blue-100":"hover:bg-gray-100 dark:hover:bg-gray-800"),onClick:i,style:{paddingLeft:12*n+8+"px"},children:[s.jsx(G,{size:14,className:"mr-2 "+(e?"text-blue-600 dark:text-blue-400":"text-gray-500")}),s.jsxs("div",{className:"flex-1 min-w-0",children:[s.jsx("div",{className:"text-sm truncate",children:t.name}),s.jsx("div",{className:"text-xs text-gray-500 truncate",children:t.description})]})]})}return null},Me=()=>{const e=[...De].sort(((e,t)=>"documentation"===e.id?-1:"documentation"===t.id?1:0)),[n,o]=t.useState(e),[r,a]=t.useState(280),[i,l]=t.useState(!1),[d,p]=t.useState(0),[u,m]=t.useState(0),[x,f]=t.useState(!1),[h,y]=t.useState("Not started"),[g,b]=t.useState(null),[v,w]=t.useState([{id:"welcome",type:"markdown",content:"# Welcome to Python Notebook\n\nThis is a Jupyter-style Python notebook powered by Pyodide. You can run Python code directly in your browser!\n\n**First steps:**\n1. Initialize Pyodide (if not already done)\n2. Try running some Python code\n3. Explore the test cases in the sidebar\n\nUse the sidebar to load pre-built test cases and examples."},{id:"init-cell",type:"code",content:'# Initialize Pyodide\nprint("Initializing Pyodide...")\n# This will be handled by the notebook\'s execution system'}]);t.useEffect((()=>{const e=async()=>{try{const e=await c.isPyodideReady();f(e),y(e?"Pyodide ready!":"Pyodide not started")}catch(e){y("Status check failed")}};e();const t=setInterval(e,2e3);return()=>clearInterval(t)}),[]);const k=e=>{o((t=>t.map((t=>t.id===e?{...t,expanded:!t.expanded}:t))))},j=e=>{b(e.id),w([{id:`test-${e.id}-${Date.now()}`,type:e.type,content:e.code}])};t.useEffect((()=>{const e=e=>{if(!i)return;const t=e.clientX-d,n=Math.max(200,Math.min(500,u+t));a(n)},t=()=>{l(!1),document.body.style.cursor="",document.body.style.userSelect=""};return i&&(document.addEventListener("mousemove",e),document.addEventListener("mouseup",t),document.body.style.cursor="col-resize",document.body.style.userSelect="none"),()=>{document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",t)}}),[i,d,u]);return s.jsxs("div",{className:"flex h-full bg-white dark:bg-gray-900 overflow-hidden",children:[s.jsxs("div",{className:"flex-shrink-0 border-r border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800 flex flex-col",style:{width:`${r}px`},children:[s.jsxs("div",{className:"p-3 border-b border-gray-200 dark:border-gray-700",children:[s.jsx("h3",{className:"text-sm font-semibold text-gray-900 dark:text-gray-100",children:"Test Cases"}),s.jsxs("div",{className:"mt-2 flex items-center text-xs",children:[s.jsx("div",{className:"w-2 h-2 rounded-full mr-2 "+(x?"bg-green-500":"bg-red-500")}),s.jsx("span",{className:"text-gray-600 dark:text-gray-400",children:h})]})]}),s.jsx("div",{className:"p-2 overflow-auto flex-1",children:n.map((e=>s.jsx(Re,{category:e,level:0,selectedTestId:g,onCategoryToggle:k,onTestSelect:j},e.id)))})]}),s.jsx("div",{className:"w-1 cursor-col-resize bg-gray-200 dark:bg-gray-700 hover:bg-blue-400 dark:hover:bg-blue-600 transition-colors",onMouseDown:e=>{l(!0),p(e.clientX),m(r),e.preventDefault()}}),s.jsx("div",{className:"flex-1 overflow-hidden",children:s.jsx(Ie,{className:"h-full",initialCells:v})})]})},ze={id:M.id,manifest:M,init:async()=>{},render:()=>s.jsx(Me,{}),onOpen:()=>{},onClose:()=>{}};export{ze as default};
