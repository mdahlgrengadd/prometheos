var U=Object.defineProperty;var j=(t,r,e)=>r in t?U(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e;var n=(t,r,e)=>j(t,typeof r!="symbol"?r+"":r,e);import{r as p,j as u}from"./index-jlDGvy4N.js";import{a3 as N}from"./MacroContext-DmdtLhcP.js";const F="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";let S=(t=21)=>{let r="",e=crypto.getRandomValues(new Uint8Array(t|=0));for(;t--;)r+=F[e[t]&63];return r};(!globalThis.EventTarget||!globalThis.Event)&&console.error(`
  PartySocket requires a global 'EventTarget' class to be available!
  You can polyfill this global by adding this to your code before any partysocket imports: 
  
  \`\`\`
  import 'partysocket/event-target-polyfill';
  \`\`\`
  Please file an issue at https://github.com/partykit/partykit if you're still having trouble.
`);var W=class extends Event{constructor(r,e){super("error",e);n(this,"message");n(this,"error");this.message=r.message,this.error=r}},D=class extends Event{constructor(r=1e3,e="",s){super("close",s);n(this,"code");n(this,"reason");n(this,"wasClean",!0);this.code=r,this.reason=e}},T={Event,ErrorEvent:W,CloseEvent:D};function A(t,r){if(!t)throw new Error(r)}function G(t){return new t.constructor(t.type,t)}function $(t){return"data"in t?new MessageEvent(t.type,t):"code"in t||"reason"in t?new D(t.code||1999,t.reason||"unknown reason",t):"error"in t?new W(t.error,t):new Event(t.type,t)}var R,q=typeof process<"u"&&typeof((R=process.versions)==null?void 0:R.node)<"u"&&typeof document>"u",C=q?$:G,g={maxReconnectionDelay:1e4,minReconnectionDelay:1e3+Math.random()*4e3,minUptime:5e3,reconnectionDelayGrowFactor:1.3,connectionTimeout:4e3,maxRetries:Number.POSITIVE_INFINITY,maxEnqueuedMessages:Number.POSITIVE_INFINITY},L=!1,Q=class y extends EventTarget{constructor(e,s,o={}){super();n(this,"_ws");n(this,"_retryCount",-1);n(this,"_uptimeTimeout");n(this,"_connectTimeout");n(this,"_shouldReconnect",!0);n(this,"_connectLock",!1);n(this,"_binaryType","blob");n(this,"_closeCalled",!1);n(this,"_messageQueue",[]);n(this,"_debugLogger",console.log.bind(console));n(this,"_url");n(this,"_protocols");n(this,"_options");n(this,"onclose",null);n(this,"onerror",null);n(this,"onmessage",null);n(this,"onopen",null);n(this,"_handleOpen",e=>{this._debug("open event");const{minUptime:s=g.minUptime}=this._options;clearTimeout(this._connectTimeout),this._uptimeTimeout=setTimeout(()=>this._acceptOpen(),s),A(this._ws,"WebSocket is not defined"),this._ws.binaryType=this._binaryType,this._messageQueue.forEach(o=>{var i;return(i=this._ws)==null?void 0:i.send(o)}),this._messageQueue=[],this.onopen&&this.onopen(e),this.dispatchEvent(C(e))});n(this,"_handleMessage",e=>{this._debug("message event"),this.onmessage&&this.onmessage(e),this.dispatchEvent(C(e))});n(this,"_handleError",e=>{this._debug("error event",e.message),this._disconnect(void 0,e.message==="TIMEOUT"?"timeout":void 0),this.onerror&&this.onerror(e),this._debug("exec error listeners"),this.dispatchEvent(C(e)),this._connect()});n(this,"_handleClose",e=>{this._debug("close event"),this._clearTimeouts(),this._shouldReconnect&&this._connect(),this.onclose&&this.onclose(e),this.dispatchEvent(C(e))});this._url=e,this._protocols=s,this._options=o,this._options.startClosed&&(this._shouldReconnect=!1),this._options.debugLogger&&(this._debugLogger=this._options.debugLogger),this._connect()}static get CONNECTING(){return 0}static get OPEN(){return 1}static get CLOSING(){return 2}static get CLOSED(){return 3}get CONNECTING(){return y.CONNECTING}get OPEN(){return y.OPEN}get CLOSING(){return y.CLOSING}get CLOSED(){return y.CLOSED}get binaryType(){return this._ws?this._ws.binaryType:this._binaryType}set binaryType(e){this._binaryType=e,this._ws&&(this._ws.binaryType=e)}get retryCount(){return Math.max(this._retryCount,0)}get bufferedAmount(){return this._messageQueue.reduce((s,o)=>(typeof o=="string"?s+=o.length:o instanceof Blob?s+=o.size:s+=o.byteLength,s),0)+(this._ws?this._ws.bufferedAmount:0)}get extensions(){return this._ws?this._ws.extensions:""}get protocol(){return this._ws?this._ws.protocol:""}get readyState(){return this._ws?this._ws.readyState:this._options.startClosed?y.CLOSED:y.CONNECTING}get url(){return this._ws?this._ws.url:""}get shouldReconnect(){return this._shouldReconnect}close(e=1e3,s){if(this._closeCalled=!0,this._shouldReconnect=!1,this._clearTimeouts(),!this._ws){this._debug("close enqueued: no ws instance");return}if(this._ws.readyState===this.CLOSED){this._debug("close: already closed");return}this._ws.close(e,s)}reconnect(e,s){this._shouldReconnect=!0,this._closeCalled=!1,this._retryCount=-1,!this._ws||this._ws.readyState===this.CLOSED?this._connect():(this._disconnect(e,s),this._connect())}send(e){if(this._ws&&this._ws.readyState===this.OPEN)this._debug("send",e),this._ws.send(e);else{const{maxEnqueuedMessages:s=g.maxEnqueuedMessages}=this._options;this._messageQueue.length<s&&(this._debug("enqueue",e),this._messageQueue.push(e))}}_debug(...e){this._options.debug&&this._debugLogger("RWS>",...e)}_getNextDelay(){const{reconnectionDelayGrowFactor:e=g.reconnectionDelayGrowFactor,minReconnectionDelay:s=g.minReconnectionDelay,maxReconnectionDelay:o=g.maxReconnectionDelay}=this._options;let i=0;return this._retryCount>0&&(i=s*e**(this._retryCount-1),i>o&&(i=o)),this._debug("next delay",i),i}_wait(){return new Promise(e=>{setTimeout(e,this._getNextDelay())})}_getNextProtocols(e){if(!e)return Promise.resolve(null);if(typeof e=="string"||Array.isArray(e))return Promise.resolve(e);if(typeof e=="function"){const s=e();if(!s)return Promise.resolve(null);if(typeof s=="string"||Array.isArray(s))return Promise.resolve(s);if(s.then)return s}throw Error("Invalid protocols")}_getNextUrl(e){if(typeof e=="string")return Promise.resolve(e);if(typeof e=="function"){const s=e();if(typeof s=="string")return Promise.resolve(s);if(s.then)return s}throw Error("Invalid URL")}_connect(){if(this._connectLock||!this._shouldReconnect)return;this._connectLock=!0;const{maxRetries:e=g.maxRetries,connectionTimeout:s=g.connectionTimeout}=this._options;if(this._retryCount>=e){this._debug("max retries reached",this._retryCount,">=",e);return}this._retryCount++,this._debug("connect",this._retryCount),this._removeListeners(),this._wait().then(()=>Promise.all([this._getNextUrl(this._url),this._getNextProtocols(this._protocols||null)])).then(([o,i])=>{if(this._closeCalled){this._connectLock=!1;return}!this._options.WebSocket&&typeof WebSocket>"u"&&!L&&(console.error(`‼️ No WebSocket implementation available. You should define options.WebSocket. 

For example, if you're using node.js, run \`npm install ws\`, and then in your code:

import PartySocket from 'partysocket';
import WS from 'ws';

const partysocket = new PartySocket({
  host: "127.0.0.1:1999",
  room: "test-room",
  WebSocket: WS
});

`),L=!0);const m=this._options.WebSocket||WebSocket;this._debug("connect",{url:o,protocols:i}),this._ws=i?new m(o,i):new m(o),this._ws.binaryType=this._binaryType,this._connectLock=!1,this._addListeners(),this._connectTimeout=setTimeout(()=>this._handleTimeout(),s)}).catch(o=>{this._connectLock=!1,this._handleError(new T.ErrorEvent(Error(o.message),this))})}_handleTimeout(){this._debug("timeout event"),this._handleError(new T.ErrorEvent(Error("TIMEOUT"),this))}_disconnect(e=1e3,s){if(this._clearTimeouts(),!!this._ws){this._removeListeners();try{this._ws.readyState===this.OPEN&&this._ws.close(e,s),this._handleClose(new T.CloseEvent(e,s,this))}catch{}}}_acceptOpen(){this._debug("accept open"),this._retryCount=0}_removeListeners(){this._ws&&(this._debug("removeListeners"),this._ws.removeEventListener("open",this._handleOpen),this._ws.removeEventListener("close",this._handleClose),this._ws.removeEventListener("message",this._handleMessage),this._ws.removeEventListener("error",this._handleError))}_addListeners(){this._ws&&(this._debug("addListeners"),this._ws.addEventListener("open",this._handleOpen),this._ws.addEventListener("close",this._handleClose),this._ws.addEventListener("message",this._handleMessage),this._ws.addEventListener("error",this._handleError))}_clearTimeouts(){clearTimeout(this._connectTimeout),clearTimeout(this._uptimeTimeout)}};/*!
 * Reconnecting WebSocket
 * by Pedro Ladaria <pedro.ladaria@gmail.com>
 * https://github.com/pladaria/reconnecting-websocket
 * License MIT
 */var H=t=>t[1]!==null&&t[1]!==void 0;function Y(){if(typeof crypto<"u"&&crypto.randomUUID)return crypto.randomUUID();let t=new Date().getTime(),r=typeof performance<"u"&&performance.now&&performance.now()*1e3||0;return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){let s=Math.random()*16;return t>0?(s=(t+s)%16|0,t=Math.floor(t/16)):(s=(r+s)%16|0,r=Math.floor(r/16)),(e==="x"?s:s&3|8).toString(16)})}function M(t,r,e={}){const{host:s,path:o,protocol:i,room:m,party:d,basePath:c,prefix:h,query:f}=t;let l=s.replace(/^(http|https|ws|wss):\/\//,"");if(l.endsWith("/")&&(l=l.slice(0,-1)),o!=null&&o.startsWith("/"))throw new Error("path must not start with a slash");const x=d??"main",b=o?`/${o}`:"",w=i||(l.startsWith("localhost:")||l.startsWith("127.0.0.1:")||l.startsWith("192.168.")||l.startsWith("10.")||l.startsWith("172.")&&l.split(".")[1]>="16"&&l.split(".")[1]<="31"||l.startsWith("[::ffff:7f00:1]:")?r:`${r}s`),E=`${w}://${l}/${c||`${h||"parties"}/${x}/${m}`}${b}`,a=(v={})=>`${E}?${new URLSearchParams([...Object.entries(e),...Object.entries(v).filter(H)])}`,_=typeof f=="function"?async()=>a(await f()):a(f);return{host:l,path:b,room:m,name:x,protocol:w,partyUrl:E,urlProvider:_}}var J=class extends Q{constructor(r){const e=k(r);super(e.urlProvider,e.protocols,e.socketOptions);n(this,"_pk");n(this,"_pkurl");n(this,"name");n(this,"room");n(this,"host");n(this,"path");this.partySocketOptions=r,this.setWSProperties(e)}updateProperties(r){const e=k({...this.partySocketOptions,...r,host:r.host??this.host,room:r.room??this.room,path:r.path??this.path});this._url=e.urlProvider,this._protocols=e.protocols,this._options=e.socketOptions,this.setWSProperties(e)}setWSProperties(r){const{_pk:e,_pkurl:s,name:o,room:i,host:m,path:d}=r;this._pk=e,this._pkurl=s,this.name=o,this.room=i,this.host=m,this.path=d}reconnect(r,e){if(!this.room||!this.host)throw new Error("The room and host must be set before connecting, use `updateProperties` method to set them or pass them to the constructor.");super.reconnect(r,e)}get id(){return this._pk}get roomUrl(){return this._pkurl}static async fetch(r,e){const s=M(r,"http"),o=typeof s.urlProvider=="string"?s.urlProvider:await s.urlProvider();return(r.fetch??fetch)(o,e)}};function k(t){const{id:r,host:e,path:s,party:o,room:i,protocol:m,query:d,protocols:c,...h}=t,f=r||Y(),l=M(t,"ws",{_pk:f});return{_pk:f,_pkurl:l.partyUrl,name:l.name,room:l.room,host:l.host,path:l.path,protocols:c,socketOptions:h,urlProvider:l.urlProvider}}var K=(t,r)=>{const e=p.useRef(r);e.current=r,p.useEffect(()=>{const s=d=>{var c,h;return(h=(c=e.current)==null?void 0:c.onOpen)==null?void 0:h.call(c,d)},o=d=>{var c,h;return(h=(c=e.current)==null?void 0:c.onMessage)==null?void 0:h.call(c,d)},i=d=>{var c,h;return(h=(c=e.current)==null?void 0:c.onClose)==null?void 0:h.call(c,d)},m=d=>{var c,h;return(h=(c=e.current)==null?void 0:c.onError)==null?void 0:h.call(c,d)};return t.addEventListener("open",s),t.addEventListener("close",i),t.addEventListener("error",m),t.addEventListener("message",o),()=>{t.removeEventListener("open",s),t.removeEventListener("close",i),t.removeEventListener("error",m),t.removeEventListener("message",o)}},[t])},B=t=>[t.startClosed,t.minUptime,t.maxRetries,t.connectionTimeout,t.maxEnqueuedMessages,t.maxReconnectionDelay,t.minReconnectionDelay,t.reconnectionDelayGrowFactor,t.debug];function V({options:t,createSocket:r,createSocketMemoKey:e}){const s=e(t),o=p.useMemo(()=>t,[s]),[i,m]=p.useState(()=>r({...o,startClosed:!0})),d=p.useRef(null),c=p.useRef(r);return c.current=r,p.useEffect(()=>{if(d.current===i){const h=c.current({...o,startClosed:!1});m(h)}else return!d.current&&o.startClosed!==!0&&i.reconnect(),d.current=i,()=>{i.close()}},[i,o]),i}function X(t){const{host:r,...e}=t,s=V({options:{host:r||(typeof window<"u"?window.location.host:"dummy-domain.com"),...e},createSocket:o=>new J(o),createSocketMemoKey:o=>JSON.stringify([o.query,o.id,o.host,o.room,o.party,o.path,o.protocol,o.protocols,o.basePath,o.prefix,...B(o)])});return K(s,t),s}const I=["Alice","Bob","Charlie","David","Eve","Frank","Grace","Heidi","Ivan","Judy","Kevin","Linda","Mallory","Nancy","Oscar","Peggy","Quentin","Randy","Steve","Trent","Ursula","Victor","Walter","Xavier","Yvonne","Zoe"],O="https://cloudflare-chat.mdahlgrengadd.workers.dev",Z=({roomId:t})=>{const[r,e]=p.useState(t),[s,o]=p.useState(""),i=`${O}/${r}`,[m]=p.useState(()=>I[Math.floor(Math.random()*I.length)]),[d,c]=p.useState([]),[h,f]=p.useState(null);p.useEffect(()=>{c([])},[r]);const l=X({party:"chat",room:r,host:O,onMessage:a=>{const _=JSON.parse(a.data);_.type==="add"?c(v=>[...v,{id:_.id,content:_.content,user:_.user,role:_.role}]):_.type==="all"&&c(_.messages)}}),x=a=>{const _={id:S(8),user:m,role:"user",content:a};l.send(JSON.stringify({type:"add",..._}))},b=a=>{a.preventDefault(),s.trim()&&(e(s.trim()),o(""))},w=()=>{const a=S(8);e(a)},E=(a,_)=>{navigator.clipboard.writeText(_).then(()=>{f(a),setTimeout(()=>f(null),2e3)}).catch(v=>console.error("Failed to copy text: ",v))};return u.jsxs("div",{className:"h-full flex flex-col",children:[u.jsxs("div",{className:"p-2 border-b",children:[u.jsxs("div",{className:"flex items-center mb-2",children:[u.jsxs("div",{className:"text-sm text-gray-500 flex-1 flex items-center",children:[u.jsxs("span",{className:"truncate",children:["Current room: ",r]}),u.jsx("button",{onClick:()=>{navigator.clipboard.writeText(i).catch(a=>console.error("Failed to copy URL: ",a))},className:"ml-2 px-2 py-1 bg-green-500 text-white text-xs rounded hover:bg-green-600",children:"Copy URL"})]}),u.jsx("button",{onClick:w,className:"ml-2 px-2 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600",children:"Random Room"})]}),u.jsxs("form",{className:"flex",onSubmit:b,children:[u.jsx("input",{value:s,onChange:a=>o(a.target.value),className:"flex-1 p-1 border text-sm",placeholder:"Enter room ID to join or create"}),u.jsx("button",{type:"submit",className:"ml-2 px-2 py-1 bg-blue-500 text-white text-sm rounded hover:bg-blue-600",children:"Join Room"})]})]}),u.jsx("div",{className:"flex-1 overflow-auto",children:d.map(a=>u.jsxs("div",{className:"p-2 border-b flex justify-between items-start",children:[u.jsxs("div",{className:"flex-1 break-all",children:[u.jsxs("strong",{children:[a.user,":"]})," ",a.content]}),u.jsx("button",{onClick:()=>E(a.id,a.content),className:"ml-2 px-2 py-1 bg-gray-200 text-xs rounded hover:bg-gray-300",children:h===a.id?"Copied!":"Copy"})]},a.id))}),u.jsx("form",{className:"p-2",onSubmit:a=>{a.preventDefault();const _=a.currentTarget.elements.namedItem("content").value;x(_),a.currentTarget.reset()},children:u.jsx("input",{name:"content",className:"w-full p-1 border",placeholder:`Hello ${m}!`})})]})},P="chat-last-room-id",z=()=>{const[t,r]=p.useState(()=>{try{return localStorage.getItem(P)||S()}catch{return S()}});return p.useEffect(()=>{try{localStorage.setItem(P,t)}catch(e){console.error("Failed to save room ID to localStorage:",e)}},[t]),u.jsx(Z,{roomId:t})},re={id:N.id,manifest:N,init:async()=>console.log("Chat ready"),render:()=>u.jsx(z,{})};export{re as default};
