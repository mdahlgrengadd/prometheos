var L=Object.defineProperty;var F=(e,r,n)=>r in e?L(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n;var E=(e,r,n)=>F(e,typeof r!="symbol"?r+"":r,n);/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const $=Symbol("Comlink.proxy"),N=Symbol("Comlink.endpoint"),j=Symbol("Comlink.releaseProxy"),M=Symbol("Comlink.finalizer"),P=Symbol("Comlink.thrown"),x=e=>typeof e=="object"&&e!==null||typeof e=="function",G={canHandle:e=>x(e)&&e[$],serialize(e){const{port1:r,port2:n}=new MessageChannel;return S(e,r),[n,[n]]},deserialize(e){return e.start(),D(e)}},V={canHandle:e=>x(e)&&P in e,serialize({value:e}){let r;return e instanceof Error?r={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:r={isError:!1,value:e},[r,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},A=new Map([["proxy",G],["throw",V]]);function _(e,r){for(const n of e)if(r===n||n==="*"||n instanceof RegExp&&n.test(r))return!0;return!1}function S(e,r=globalThis,n=["*"]){r.addEventListener("message",function a(s){if(!s||!s.data)return;if(!_(n,s.origin)){console.warn(`Invalid origin '${s.origin}' for comlink proxy`);return}const{id:t,type:c,path:o}=Object.assign({path:[]},s.data),i=(s.data.argumentList||[]).map(d);let l;try{const u=o.slice(0,-1).reduce((f,m)=>f[m],e),g=o.reduce((f,m)=>f[m],e);switch(c){case"GET":l=g;break;case"SET":u[o.slice(-1)[0]]=d(s.data.value),l=!0;break;case"APPLY":l=g.apply(u,i);break;case"CONSTRUCT":{const f=new g(...i);l=X(f)}break;case"ENDPOINT":{const{port1:f,port2:m}=new MessageChannel;S(e,m),l=H(f,[f])}break;case"RELEASE":l=void 0;break;default:return}}catch(u){l={value:u,[P]:0}}Promise.resolve(l).catch(u=>({value:u,[P]:0})).then(u=>{const[g,f]=b(u);r.postMessage(Object.assign(Object.assign({},g),{id:t}),f),c==="RELEASE"&&(r.removeEventListener("message",a),O(r),M in e&&typeof e[M]=="function"&&e[M]())}).catch(u=>{const[g,f]=b({value:new TypeError("Unserializable return value"),[P]:0});r.postMessage(Object.assign(Object.assign({},g),{id:t}),f)})}),r.start&&r.start()}function v(e){return e.constructor.name==="MessagePort"}function O(e){v(e)&&e.close()}function D(e,r){const n=new Map;return e.addEventListener("message",function(s){const{data:t}=s;if(!t||!t.id)return;const c=n.get(t.id);if(c)try{c(t)}finally{n.delete(t.id)}}),C(e,n,[],r)}function h(e){if(e)throw new Error("Proxy has been released and is not useable")}function T(e){return p(e,new Map,{type:"RELEASE"}).then(()=>{O(e)})}const w=new WeakMap,k="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{const r=(w.get(e)||0)-1;w.set(e,r),r===0&&T(e)});function U(e,r){const n=(w.get(r)||0)+1;w.set(r,n),k&&k.register(e,r,e)}function Y(e){k&&k.unregister(e)}function C(e,r,n=[],a=function(){}){let s=!1;const t=new Proxy(a,{get(c,o){if(h(s),o===j)return()=>{Y(t),T(e),r.clear(),s=!0};if(o==="then"){if(n.length===0)return{then:()=>t};const i=p(e,r,{type:"GET",path:n.map(l=>l.toString())}).then(d);return i.then.bind(i)}return C(e,r,[...n,o])},set(c,o,i){h(s);const[l,u]=b(i);return p(e,r,{type:"SET",path:[...n,o].map(g=>g.toString()),value:l},u).then(d)},apply(c,o,i){h(s);const l=n[n.length-1];if(l===N)return p(e,r,{type:"ENDPOINT"}).then(d);if(l==="bind")return C(e,r,n.slice(0,-1));const[u,g]=R(i);return p(e,r,{type:"APPLY",path:n.map(f=>f.toString()),argumentList:u},g).then(d)},construct(c,o){h(s);const[i,l]=R(o);return p(e,r,{type:"CONSTRUCT",path:n.map(u=>u.toString()),argumentList:i},l).then(d)}});return U(t,e),t}function q(e){return Array.prototype.concat.apply([],e)}function R(e){const r=e.map(b);return[r.map(n=>n[0]),q(r.map(n=>n[1]))]}const W=new WeakMap;function H(e,r){return W.set(e,r),e}function X(e){return Object.assign(e,{[$]:!0})}function b(e){for(const[r,n]of A)if(n.canHandle(e)){const[a,s]=n.serialize(e);return[{type:"HANDLER",name:r,value:a},s]}return[{type:"RAW",value:e},W.get(e)||[]]}function d(e){switch(e.type){case"HANDLER":return A.get(e.name).deserialize(e.value);case"RAW":return e.value}}function p(e,r,n,a){return new Promise(s=>{const t=B();r.set(t,s),e.start&&e.start(),e.postMessage(Object.assign({id:t},n),a)})}function B(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}let y=null;self.addEventListener("message",e=>{var r,n;if(e.data&&e.data.type==="comlink-port"){console.log("Received Comlink port in worker");const a=e.data.port||((r=e.ports)==null?void 0:r[0]);if(!a){console.error("Comlink port not found in message");return}const t=self.workerPluginManager;if(t){const c=t.getPlugins().get("pyodide");c&&typeof c.handleComlinkPort=="function"?c.handleComlinkPort(a):(console.warn("Pyodide plugin not ready, buffering Comlink port"),y=a)}else console.warn("Worker plugin manager not available for Comlink setup, buffering port"),y=a}else if(e.data&&e.data.type==="mcp-protocol-message"){const s=self.workerPluginManager;if(s){const t=s.getPlugins().get("mcp-server");if(t){const c=e.data.message;(async()=>{try{const i=await t.processMCPMessage(c);self.postMessage({type:"mcp-protocol-response",message:i})}catch(o){self.postMessage({type:"mcp-protocol-response",message:{jsonrpc:"2.0",error:{code:-32603,message:o instanceof Error?o.message:String(o)},id:(c==null?void 0:c.id)||null}})}})()}else self.postMessage({type:"mcp-protocol-response",message:{jsonrpc:"2.0",error:{code:-32601,message:"MCP Server plugin not available"},id:((n=e.data.message)==null?void 0:n.id)||null}})}}});class J{constructor(){E(this,"plugins",new Map);E(this,"pluginHandlers",new Map);console.log("Worker Plugin Manager initialized")}getPlugins(){return this.plugins}async registerPlugin(r,n){try{if(this.plugins.has(r))return{status:"success",message:`Plugin ${r} already registered`};console.log(`Attempting to register plugin: ${r} from ${n}`);const a="/prometheos/";let s=n;s.startsWith("http")||(n.startsWith(a)?s=n:s=a+n.replace(/^\//,""));const t=new URL(s,self.location.origin).href;console.log(`Resolved import URL: ${t}`);const c=await import(t),o=c.default||c;if(!o||!o.id)return{error:`Invalid plugin module: ${t}`};if(console.log(`WorkerPluginManager: registering plugin ${r}`),this.plugins.set(r,o),r==="pyodide"&&(console.log("WorkerPluginManager: pyodide plugin registered"),y)){const i=this.getPlugins().get("pyodide");i!=null&&i.handleComlinkPort?(console.log("Forwarding buffered Comlink port to pyodide plugin"),i.handleComlinkPort(y),y=null):console.warn("pyodide plugin missing handleComlinkPort, cannot forward port")}if(typeof o.handle=="function"){const i=async(l,u)=>{var g;return((g=o.handle)==null?void 0:g.call(o,l,u))??{error:"Handler returned undefined"}};this.pluginHandlers.set(r,i)}else this.pluginHandlers.set(r,async(i,l)=>{const g=o[i];if(typeof g!="function")throw new Error(`Method ${i} not found in plugin ${r}`);return g(...l?Object.values(l):[])});return console.log(`Worker registered plugin: ${r}`),{status:"success",message:`Plugin ${r} registered`}}catch(a){return console.error(`Failed to register plugin ${r}:`,a),{error:`Failed to register plugin ${r}: ${a instanceof Error?a.message:String(a)}`}}}unregisterPlugin(r){return this.plugins.has(r)?(this.plugins.delete(r),this.pluginHandlers.delete(r),console.log(`Worker unregistered plugin: ${r}`),{status:"success"}):{error:`Plugin ${r} not registered`}}isPluginRegistered(r){return this.plugins.has(r)}getPluginInfo(r){const n=this.plugins.get(r);return n?{id:n.id}:null}getAllPlugins(){return Array.from(this.plugins.values()).map(r=>({id:r.id}))}async callPlugin(r,n,a){const s=this.pluginHandlers.get(r);if(!s)return{error:`Plugin ${r} not registered`};try{const t=await s(n,a);return t instanceof ReadableStream?H(t,[t]):t}catch(t){return console.error(`Error calling plugin ${r}.${n}:`,t),{error:`Error in ${r}.${n}: ${t instanceof Error?t.message:String(t)}`}}}}const z=new J;self.workerPluginManager=z;S(z);
