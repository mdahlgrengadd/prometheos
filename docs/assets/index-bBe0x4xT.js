var K=Object.defineProperty;var V=(t,r,e)=>r in t?K(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e;var a=(t,r,e)=>V(t,typeof r!="symbol"?r+"":r,e);import{r as d,j as n}from"./index-CJgcV1CL.js";import{ae as P}from"./MacroContext-Bl5Rj96v.js";import"./monaco-editor-Dq6WuQlL.js";const X="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";let N=(t=21)=>{let r="",e=crypto.getRandomValues(new Uint8Array(t|=0));for(;t--;)r+=X[e[t]&63];return r};(!globalThis.EventTarget||!globalThis.Event)&&console.error(`
  PartySocket requires a global 'EventTarget' class to be available!
  You can polyfill this global by adding this to your code before any partysocket imports: 
  
  \`\`\`
  import 'partysocket/event-target-polyfill';
  \`\`\`
  Please file an issue at https://github.com/partykit/partykit if you're still having trouble.
`);var A=class extends Event{constructor(r,e){super("error",e);a(this,"message");a(this,"error");this.message=r.message,this.error=r}},q=class extends Event{constructor(r=1e3,e="",s){super("close",s);a(this,"code");a(this,"reason");a(this,"wasClean",!0);this.code=r,this.reason=e}},j={Event,ErrorEvent:A,CloseEvent:q};function Z(t,r){if(!t)throw new Error(r)}function z(t){return new t.constructor(t.type,t)}function ee(t){return"data"in t?new MessageEvent(t.type,t):"code"in t||"reason"in t?new q(t.code||1999,t.reason||"unknown reason",t):"error"in t?new A(t.error,t):new Event(t.type,t)}var D,te=typeof process<"u"&&typeof((D=process.versions)==null?void 0:D.node)<"u"&&typeof document>"u",R=te?ee:z,b={maxReconnectionDelay:1e4,minReconnectionDelay:1e3+Math.random()*4e3,minUptime:5e3,reconnectionDelayGrowFactor:1.3,connectionTimeout:4e3,maxRetries:Number.POSITIVE_INFINITY,maxEnqueuedMessages:Number.POSITIVE_INFINITY},W=!1,se=class x extends EventTarget{constructor(e,s,o={}){super();a(this,"_ws");a(this,"_retryCount",-1);a(this,"_uptimeTimeout");a(this,"_connectTimeout");a(this,"_shouldReconnect",!0);a(this,"_connectLock",!1);a(this,"_binaryType","blob");a(this,"_closeCalled",!1);a(this,"_messageQueue",[]);a(this,"_debugLogger",console.log.bind(console));a(this,"_url");a(this,"_protocols");a(this,"_options");a(this,"onclose",null);a(this,"onerror",null);a(this,"onmessage",null);a(this,"onopen",null);a(this,"_handleOpen",e=>{this._debug("open event");const{minUptime:s=b.minUptime}=this._options;clearTimeout(this._connectTimeout),this._uptimeTimeout=setTimeout(()=>this._acceptOpen(),s),Z(this._ws,"WebSocket is not defined"),this._ws.binaryType=this._binaryType,this._messageQueue.forEach(o=>{var i;return(i=this._ws)==null?void 0:i.send(o)}),this._messageQueue=[],this.onopen&&this.onopen(e),this.dispatchEvent(R(e))});a(this,"_handleMessage",e=>{this._debug("message event"),this.onmessage&&this.onmessage(e),this.dispatchEvent(R(e))});a(this,"_handleError",e=>{this._debug("error event",e.message),this._disconnect(void 0,e.message==="TIMEOUT"?"timeout":void 0),this.onerror&&this.onerror(e),this._debug("exec error listeners"),this.dispatchEvent(R(e)),this._connect()});a(this,"_handleClose",e=>{this._debug("close event"),this._clearTimeouts(),this._shouldReconnect&&this._connect(),this.onclose&&this.onclose(e),this.dispatchEvent(R(e))});this._url=e,this._protocols=s,this._options=o,this._options.startClosed&&(this._shouldReconnect=!1),this._options.debugLogger&&(this._debugLogger=this._options.debugLogger),this._connect()}static get CONNECTING(){return 0}static get OPEN(){return 1}static get CLOSING(){return 2}static get CLOSED(){return 3}get CONNECTING(){return x.CONNECTING}get OPEN(){return x.OPEN}get CLOSING(){return x.CLOSING}get CLOSED(){return x.CLOSED}get binaryType(){return this._ws?this._ws.binaryType:this._binaryType}set binaryType(e){this._binaryType=e,this._ws&&(this._ws.binaryType=e)}get retryCount(){return Math.max(this._retryCount,0)}get bufferedAmount(){return this._messageQueue.reduce((s,o)=>(typeof o=="string"?s+=o.length:o instanceof Blob?s+=o.size:s+=o.byteLength,s),0)+(this._ws?this._ws.bufferedAmount:0)}get extensions(){return this._ws?this._ws.extensions:""}get protocol(){return this._ws?this._ws.protocol:""}get readyState(){return this._ws?this._ws.readyState:this._options.startClosed?x.CLOSED:x.CONNECTING}get url(){return this._ws?this._ws.url:""}get shouldReconnect(){return this._shouldReconnect}close(e=1e3,s){if(this._closeCalled=!0,this._shouldReconnect=!1,this._clearTimeouts(),!this._ws){this._debug("close enqueued: no ws instance");return}if(this._ws.readyState===this.CLOSED){this._debug("close: already closed");return}this._ws.close(e,s)}reconnect(e,s){this._shouldReconnect=!0,this._closeCalled=!1,this._retryCount=-1,!this._ws||this._ws.readyState===this.CLOSED?this._connect():(this._disconnect(e,s),this._connect())}send(e){if(this._ws&&this._ws.readyState===this.OPEN)this._debug("send",e),this._ws.send(e);else{const{maxEnqueuedMessages:s=b.maxEnqueuedMessages}=this._options;this._messageQueue.length<s&&(this._debug("enqueue",e),this._messageQueue.push(e))}}_debug(...e){this._options.debug&&this._debugLogger("RWS>",...e)}_getNextDelay(){const{reconnectionDelayGrowFactor:e=b.reconnectionDelayGrowFactor,minReconnectionDelay:s=b.minReconnectionDelay,maxReconnectionDelay:o=b.maxReconnectionDelay}=this._options;let i=0;return this._retryCount>0&&(i=s*e**(this._retryCount-1),i>o&&(i=o)),this._debug("next delay",i),i}_wait(){return new Promise(e=>{setTimeout(e,this._getNextDelay())})}_getNextProtocols(e){if(!e)return Promise.resolve(null);if(typeof e=="string"||Array.isArray(e))return Promise.resolve(e);if(typeof e=="function"){const s=e();if(!s)return Promise.resolve(null);if(typeof s=="string"||Array.isArray(s))return Promise.resolve(s);if(s.then)return s}throw Error("Invalid protocols")}_getNextUrl(e){if(typeof e=="string")return Promise.resolve(e);if(typeof e=="function"){const s=e();if(typeof s=="string")return Promise.resolve(s);if(s.then)return s}throw Error("Invalid URL")}_connect(){if(this._connectLock||!this._shouldReconnect)return;this._connectLock=!0;const{maxRetries:e=b.maxRetries,connectionTimeout:s=b.connectionTimeout}=this._options;if(this._retryCount>=e){this._debug("max retries reached",this._retryCount,">=",e);return}this._retryCount++,this._debug("connect",this._retryCount),this._removeListeners(),this._wait().then(()=>Promise.all([this._getNextUrl(this._url),this._getNextProtocols(this._protocols||null)])).then(([o,i])=>{if(this._closeCalled){this._connectLock=!1;return}!this._options.WebSocket&&typeof WebSocket>"u"&&!W&&(console.error(`‼️ No WebSocket implementation available. You should define options.WebSocket. 

For example, if you're using node.js, run \`npm install ws\`, and then in your code:

import PartySocket from 'partysocket';
import WS from 'ws';

const partysocket = new PartySocket({
  host: "127.0.0.1:1999",
  room: "test-room",
  WebSocket: WS
});

`),W=!0);const p=this._options.WebSocket||WebSocket;this._debug("connect",{url:o,protocols:i}),this._ws=i?new p(o,i):new p(o),this._ws.binaryType=this._binaryType,this._connectLock=!1,this._addListeners(),this._connectTimeout=setTimeout(()=>this._handleTimeout(),s)}).catch(o=>{this._connectLock=!1,this._handleError(new j.ErrorEvent(Error(o.message),this))})}_handleTimeout(){this._debug("timeout event"),this._handleError(new j.ErrorEvent(Error("TIMEOUT"),this))}_disconnect(e=1e3,s){if(this._clearTimeouts(),!!this._ws){this._removeListeners();try{this._ws.readyState===this.OPEN&&this._ws.close(e,s),this._handleClose(new j.CloseEvent(e,s,this))}catch{}}}_acceptOpen(){this._debug("accept open"),this._retryCount=0}_removeListeners(){this._ws&&(this._debug("removeListeners"),this._ws.removeEventListener("open",this._handleOpen),this._ws.removeEventListener("close",this._handleClose),this._ws.removeEventListener("message",this._handleMessage),this._ws.removeEventListener("error",this._handleError))}_addListeners(){this._ws&&(this._debug("addListeners"),this._ws.addEventListener("open",this._handleOpen),this._ws.addEventListener("close",this._handleClose),this._ws.addEventListener("message",this._handleMessage),this._ws.addEventListener("error",this._handleError))}_clearTimeouts(){clearTimeout(this._connectTimeout),clearTimeout(this._uptimeTimeout)}};/*!
 * Reconnecting WebSocket
 * by Pedro Ladaria <pedro.ladaria@gmail.com>
 * https://github.com/pladaria/reconnecting-websocket
 * License MIT
 */var re=t=>t[1]!==null&&t[1]!==void 0;function oe(){if(typeof crypto<"u"&&crypto.randomUUID)return crypto.randomUUID();let t=new Date().getTime(),r=typeof performance<"u"&&performance.now&&performance.now()*1e3||0;return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){let s=Math.random()*16;return t>0?(s=(t+s)%16|0,t=Math.floor(t/16)):(s=(r+s)%16|0,r=Math.floor(r/16)),(e==="x"?s:s&3|8).toString(16)})}function G(t,r,e={}){const{host:s,path:o,protocol:i,room:p,party:m,basePath:l,prefix:h,query:v}=t;let u=s.replace(/^(http|https|ws|wss):\/\//,"");if(u.endsWith("/")&&(u=u.slice(0,-1)),o!=null&&o.startsWith("/"))throw new Error("path must not start with a slash");const g=m??"main",w=o?`/${o}`:"",S=i||(u.startsWith("localhost:")||u.startsWith("127.0.0.1:")||u.startsWith("192.168.")||u.startsWith("10.")||u.startsWith("172.")&&u.split(".")[1]>="16"&&u.split(".")[1]<="31"||u.startsWith("[::ffff:7f00:1]:")?r:`${r}s`),E=`${S}://${u}/${l||`${h||"parties"}/${g}/${p}`}${w}`,C=(I={})=>`${E}?${new URLSearchParams([...Object.entries(e),...Object.entries(I).filter(re)])}`,T=typeof v=="function"?async()=>C(await v()):C(v);return{host:u,path:w,room:p,name:g,protocol:S,partyUrl:E,urlProvider:T}}var ne=class extends se{constructor(r){const e=M(r);super(e.urlProvider,e.protocols,e.socketOptions);a(this,"_pk");a(this,"_pkurl");a(this,"name");a(this,"room");a(this,"host");a(this,"path");this.partySocketOptions=r,this.setWSProperties(e)}updateProperties(r){const e=M({...this.partySocketOptions,...r,host:r.host??this.host,room:r.room??this.room,path:r.path??this.path});this._url=e.urlProvider,this._protocols=e.protocols,this._options=e.socketOptions,this.setWSProperties(e)}setWSProperties(r){const{_pk:e,_pkurl:s,name:o,room:i,host:p,path:m}=r;this._pk=e,this._pkurl=s,this.name=o,this.room=i,this.host=p,this.path=m}reconnect(r,e){if(!this.room||!this.host)throw new Error("The room and host must be set before connecting, use `updateProperties` method to set them or pass them to the constructor.");super.reconnect(r,e)}get id(){return this._pk}get roomUrl(){return this._pkurl}static async fetch(r,e){const s=G(r,"http"),o=typeof s.urlProvider=="string"?s.urlProvider:await s.urlProvider();return(r.fetch??fetch)(o,e)}};function M(t){const{id:r,host:e,path:s,party:o,room:i,protocol:p,query:m,protocols:l,...h}=t,v=r||oe(),u=G(t,"ws",{_pk:v});return{_pk:v,_pkurl:u.partyUrl,name:u.name,room:u.room,host:u.host,path:u.path,protocols:l,socketOptions:h,urlProvider:u.urlProvider}}var ie=(t,r)=>{const e=d.useRef(r);e.current=r,d.useEffect(()=>{const s=m=>{var l,h;return(h=(l=e.current)==null?void 0:l.onOpen)==null?void 0:h.call(l,m)},o=m=>{var l,h;return(h=(l=e.current)==null?void 0:l.onMessage)==null?void 0:h.call(l,m)},i=m=>{var l,h;return(h=(l=e.current)==null?void 0:l.onClose)==null?void 0:h.call(l,m)},p=m=>{var l,h;return(h=(l=e.current)==null?void 0:l.onError)==null?void 0:h.call(l,m)};return t.addEventListener("open",s),t.addEventListener("close",i),t.addEventListener("error",p),t.addEventListener("message",o),()=>{t.removeEventListener("open",s),t.removeEventListener("close",i),t.removeEventListener("error",p),t.removeEventListener("message",o)}},[t])},ae=t=>[t.startClosed,t.minUptime,t.maxRetries,t.connectionTimeout,t.maxEnqueuedMessages,t.maxReconnectionDelay,t.minReconnectionDelay,t.reconnectionDelayGrowFactor,t.debug];function ce({options:t,createSocket:r,createSocketMemoKey:e}){const s=e(t),o=d.useMemo(()=>t,[s]),[i,p]=d.useState(()=>r({...o,startClosed:!0})),m=d.useRef(null),l=d.useRef(r);return l.current=r,d.useEffect(()=>{if(m.current===i){const h=l.current({...o,startClosed:!1});p(h)}else return!m.current&&o.startClosed!==!0&&i.reconnect(),m.current=i,()=>{i.close()}},[i,o]),i}function le(t){const{host:r,...e}=t,s=ce({options:{host:r||(typeof window<"u"?window.location.host:"dummy-domain.com"),...e},createSocket:o=>new ne(o),createSocketMemoKey:o=>JSON.stringify([o.query,o.id,o.host,o.room,o.party,o.path,o.protocol,o.protocols,o.basePath,o.prefix,...ae(o)])});return ie(s,t),s}const U=["Alice","Bob","Charlie","David","Eve","Frank","Grace","Heidi","Ivan","Judy","Kevin","Linda","Mallory","Nancy","Oscar","Peggy","Quentin","Randy","Steve","Trent","Ursula","Victor","Walter","Xavier","Yvonne","Zoe"],ue="https://cloudflare-chat.mdahlgrengadd.workers.dev",he=({roomId:t})=>{const[r,e]=d.useState(t),[s,o]=d.useState(null),[i,p]=d.useState(""),[m]=d.useState(()=>U[Math.floor(Math.random()*U.length)]),[l,h]=d.useState([]),[v,u]=d.useState(null),[g,w]=d.useState(""),[S,E]=d.useState(!1),[C,T]=d.useState(3600),[I,L]=d.useState(!1),[O,f]=d.useState("");d.useEffect(()=>{h([]),w(""),E(!1),L(!1),f("")},[r]);const k=le({party:"chat",room:r,host:ue,onMessage:c=>{const _=JSON.parse(c.data);if(_.error){f(_.error);return}if(_.ok){_.verified?(E(!0),f("")):(L(!0),E(!0),f(""));return}const y=_;y.type==="add"?h(B=>[...B,{id:y.id,content:y.content,user:y.user,role:y.role}]):y.type==="all"&&h(y.messages)}}),$=()=>{if(g.length<3){f("Password must be at least 3 characters long");return}k.send(JSON.stringify({type:"create-room",password:g,ttl:C}))},J=()=>{if(!g){f("Password is required");return}k.send(JSON.stringify({type:"verify-password",password:g}))};if(!S)return n.jsx("div",{className:"h-full flex flex-col items-center justify-center",children:n.jsxs("div",{className:"p-4 border rounded bg-white max-w-sm w-full",children:[n.jsx("h3",{className:"mb-2 font-bold",children:"Start Chat"}),O&&n.jsx("div",{className:"text-red-500 mb-2",children:O}),!s&&n.jsx(n.Fragment,{children:n.jsxs("div",{className:"mb-2",children:[n.jsx("label",{className:"block mb-1",children:"Room Name/ID"}),n.jsx("input",{className:"w-full p-1 border mb-2",value:i,onChange:c=>p(c.target.value),placeholder:"Enter a room name or ID"}),n.jsxs("div",{className:"flex gap-2",children:[n.jsx("button",{className:"flex-1 bg-blue-500 text-white py-1 rounded",onClick:()=>{if(!i.trim()){f("Room name/ID required");return}e(i.trim()),o("join"),f("")},children:"Join Room"}),n.jsx("button",{className:"flex-1 bg-green-500 text-white py-1 rounded",onClick:()=>{if(!i.trim()){f("Room name/ID required");return}e(i.trim()),o("create"),f("")},children:"Create Room"})]}),n.jsx("button",{className:"mt-2 w-full bg-gray-200 text-gray-700 py-1 rounded",onClick:()=>{const c=N(8);p(c)},children:"Generate Random Room"})]})}),!!s&&n.jsxs("form",{onSubmit:c=>{c.preventDefault(),s==="create"?$():J()},children:[n.jsx("div",{className:"mb-2",children:n.jsxs("label",{className:"block mb-1",children:["Room: ",n.jsx("span",{className:"font-mono",children:r})]})}),n.jsx("label",{className:"block mb-1",children:"Password"}),n.jsx("input",{type:"password",className:"w-full p-1 border mb-2",value:g,onChange:c=>w(c.target.value),required:!0}),s==="create"&&n.jsxs(n.Fragment,{children:[n.jsx("label",{className:"block mb-1",children:"Room Expiration (seconds)"}),n.jsxs("select",{className:"w-full p-1 border mb-2",value:C,onChange:c=>T(Number(c.target.value)),children:[n.jsx("option",{value:3600,children:"1 hour"}),n.jsx("option",{value:7200,children:"2 hours"}),n.jsx("option",{value:14400,children:"4 hours"}),n.jsx("option",{value:28800,children:"8 hours"}),n.jsx("option",{value:86400,children:"24 hours"})]})]}),n.jsx("button",{type:"submit",className:"w-full bg-blue-500 text-white py-1 rounded",children:s==="create"?"Create Room":"Join Room"}),n.jsx("button",{type:"button",className:"w-full mt-2 bg-gray-300 text-gray-700 py-1 rounded",onClick:()=>{o(null),w(""),f("")},children:"Back"})]})]})});const Q=c=>{const _={id:N(8),user:m,role:"user",content:c};k.send(JSON.stringify({type:"add",password:g,..._}))},H=()=>{const c=N(8);e(c)},Y=(c,_)=>{navigator.clipboard.writeText(_).then(()=>{u(c),setTimeout(()=>u(null),2e3)}).catch(y=>console.error("Failed to copy text: ",y))};return n.jsxs("div",{className:"h-full flex flex-col",children:[n.jsx("div",{className:"p-2 border-b",children:n.jsxs("div",{className:"flex items-center mb-2",children:[n.jsx("div",{className:"text-sm text-gray-500 flex-1 flex items-center",children:n.jsxs("span",{className:"truncate",children:["Current room: ",r]})}),n.jsx("button",{onClick:H,className:"ml-2 px-2 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600",children:"Random Room"})]})}),n.jsx("div",{className:"flex-1 overflow-auto",children:l.map(c=>n.jsxs("div",{className:"p-2 border-b flex justify-between items-start",children:[n.jsxs("div",{className:"flex-1 break-all",children:[n.jsxs("strong",{children:[c.user,":"]})," ",c.content]}),n.jsx("button",{onClick:()=>Y(c.id,c.content),className:"ml-2 px-2 py-1 bg-gray-200 text-xs rounded hover:bg-gray-300",children:v===c.id?"Copied!":"Copy"})]},c.id))}),n.jsx("form",{className:"p-2",onSubmit:c=>{c.preventDefault();const _=c.currentTarget.elements.namedItem("content").value;Q(_),c.currentTarget.reset()},children:n.jsx("input",{name:"content",className:"w-full p-1 border",placeholder:`Hello ${m}!`})})]})},F="chat-last-room-id",de=()=>{const[t,r]=d.useState(()=>{try{return localStorage.getItem(F)||N()}catch{return N()}});return d.useEffect(()=>{try{localStorage.setItem(F,t)}catch(e){console.error("Failed to save room ID to localStorage:",e)}},[t]),n.jsx(he,{roomId:t})},ge={id:P.id,manifest:P,init:async()=>console.log("Chat ready"),render:()=>n.jsx(de,{})};export{ge as default};
