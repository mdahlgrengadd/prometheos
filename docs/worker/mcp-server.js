// Built worker plugin: mcp-server
// Generated on: 2025-06-02T06:20:57.278Z

var u={id:"mcp-server",_tools:new Map,_isInitialized:!1,_registeredComponents:new Set,async initialize(){try{return this._isInitialized=!0,console.log("Made with love by the PrometheOS team \u2764\uFE0F"),console.log("https://www.linkedin.com/in/erik-martin-dahlgren/"),{status:"success",message:"MCP Server initialized"}}catch(t){return{status:"error",message:`Failed to initialize MCP Server: ${t instanceof Error?t.message:String(t)}`}}},async processMCPMessage(t){try{if(!t.jsonrpc||t.jsonrpc!=="2.0"||!t.method)return{jsonrpc:"2.0",error:{code:-32600,message:"Invalid Request"},id:t.id||null};switch(t.method){case"tools/list":return this._handleToolsList(t);case"tools/call":return this._handleToolsCall(t);default:return{jsonrpc:"2.0",error:{code:-32601,message:`Method ${t.method} not found`},id:t.id||null}}}catch(e){return{jsonrpc:"2.0",error:{code:-32603,message:`Internal error: ${e instanceof Error?e.message:String(e)}`},id:t.id||null}}},async _handleToolsList(t){let e=t.params&&typeof t.params=="object"&&typeof t.params.format=="string"?t.params.format:"openai";return{jsonrpc:"2.0",result:await this.getAvailableTools(e),id:t.id||null}},async _handleToolsCall(t){let e=t.params;if(!e||typeof e!="object")return{jsonrpc:"2.0",error:{code:-32602,message:"Invalid params"},id:t.id||null};let{name:s,arguments:o}=e;if(!s||typeof s!="string")return{jsonrpc:"2.0",error:{code:-32602,message:"Missing tool name"},id:t.id||null};try{return{jsonrpc:"2.0",result:await this.executeTool({name:s,arguments:o||{}}),id:t.id||null}}catch(r){return{jsonrpc:"2.0",error:{code:-32603,message:`Error executing tool: ${r instanceof Error?r.message:String(r)}`},id:t.id||null}}},async registerTool(t,e,s,o){try{let r=`${t}.${e}`;if(this._tools.has(r))return{status:"error",message:`Tool ${r} is already registered`};let n={type:"object",properties:o||{},required:o?Object.keys(o).filter(i=>o[i].required):[]},a={componentId:t,action:e,tool:{name:r,description:s,parameters:n}};return this._tools.set(r,a),this._registeredComponents.add(t),{status:"success",message:`Tool ${r} registered`}}catch(r){return{status:"error",message:`Failed to register tool: ${r instanceof Error?r.message:String(r)}`}}},async unregisterTool(t){if(!this._tools.has(t))return{status:"error",message:`Tool ${t} not found`};this._tools.delete(t);let e=t.split(".")[0],s=!1;for(let o of this._tools.keys())if(o.startsWith(e+".")){s=!0;break}return s||this._registeredComponents.delete(e),{status:"success",message:`Tool ${t} unregistered`}},async getAvailableTools(t="openai"){return Array.from(this._tools.values()).map(e=>e.tool)},async executeTool(t){let e=this._tools.get(t.name);if(!e)return{content:[{type:"text",text:`Tool ${t.name} not found`}],isError:!0};try{let s=await this._executeToolInMainThread(e.componentId,e.action,t.arguments);return{content:[{type:"text",text:JSON.stringify(s,null,2)}],isError:!1}}catch(s){return{content:[{type:"text",text:`Error executing ${t.name}: ${s instanceof Error?s.message:String(s)}`}],isError:!0}}},async _executeToolInMainThread(t,e,s){return new Promise((o,r)=>{let n=`mcp-tool-${Date.now()}-${Math.random().toString(36).substring(2,9)}`,l=null,a=i=>{i.data.type==="mcp-tool-response"&&i.data.requestId===n&&(self.removeEventListener("message",a),l!==null&&clearTimeout(l),i.data.error?r(new Error(i.data.error)):o(i.data.result))};self.addEventListener("message",a),self.postMessage({type:"mcp-tool-request",requestId:n,componentId:t,action:e,params:s}),l=setTimeout(()=>{self.removeEventListener("message",a),r(new Error("Tool execution timeout"))},3e4)})},async autoRegisterFromApiComponents(t){let e=0,s=[];for(let o of t)if(!this._registeredComponents.has(o.id)){this._registeredComponents.add(o.id);for(let r of o.actions)try{let n=await this.registerTool(o.id,r.name,r.description,r.parameters);n.status==="success"?e++:s.push(`${o.id}.${r.name}: ${n.message}`)}catch(n){s.push(`${o.id}.${r.name}: ${n instanceof Error?n.message:String(n)}`)}}return{status:"success",registered:e,errors:s}},async unregisterComponent(t){let e=0,s=[],o=[];for(let[r,n]of this._tools.entries())n.componentId===t&&o.push(r);for(let r of o)try{let n=await this.unregisterTool(r);n.status==="success"?e++:s.push(`${r}: ${n.message}`)}catch(n){s.push(`${r}: ${n instanceof Error?n.message:String(n)}`)}return this._registeredComponents.delete(t),{status:"success",unregistered:e,errors:s}},async getTool(t){let e=this._tools.get(t);return e?e.tool:null},isInitialized(){return this._isInitialized},getStats(){return{toolCount:this._tools.size,isInitialized:this._isInitialized}},cleanup(){this._tools.clear(),this._registeredComponents.clear(),this._isInitialized=!1},handle(t,e){switch(t){case"initialize":return this.initialize();case"registerTool":return!e?.componentId||!e?.action||!e?.description?{status:"error",message:"registerTool requires componentId, action, and description"}:this.registerTool(e.componentId,e.action,e.description,e.parameters);case"unregisterTool":return e?.toolName?this.unregisterTool(e.toolName):{status:"error",message:"unregisterTool requires toolName"};case"getAvailableTools":return this.getAvailableTools(e&&typeof e.format=="string"?e.format:"openai");case"executeTool":return e?.toolCall?this.executeTool(e.toolCall):{content:[{type:"text",text:"executeTool requires toolCall parameter"}],isError:!0};case"autoRegisterFromApiComponents":return e?.components?this.autoRegisterFromApiComponents(e.components):{status:"error",message:"autoRegisterFromApiComponents requires components array"};case"unregisterComponent":return e?.componentId?this.unregisterComponent(e.componentId):{status:"error",message:"unregisterComponent requires componentId"};case"getTool":return e?.toolName?this.getTool(e.toolName):null;case"isInitialized":return this.isInitialized();case"getStats":return this.getStats();case"cleanup":return this.cleanup();case"processMCPMessage":return e?.message?this.processMCPMessage(e.message):{jsonrpc:"2.0",error:{code:-32602,message:"Missing message parameter"},id:null};default:return{status:"error",message:`Unknown method: ${t}`}}}},c=u;export{c as default};
